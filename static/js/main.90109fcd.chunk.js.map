{"version":3,"sources":["components/AddContactsForm/AddContactsForm.module.css","components/Container/Container.module.css","components/ContactsList/ContactsList.module.css","components/ContactsList/ContactsListItm/ContactsListItm.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.js","components/Section/Section.js","components/AddContactsForm/AddContactsForm.js","components/Filter/Filter.js","components/ContactsList/ContactsListItm/ContactsListItm.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","phonebook","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","Container","children","className","styles","container","Section","title","AddContactsForm","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","form","input","onChange","type","pattern","required","btnAdd","Component","connect","dispatch","phonebookActions","target","ContactsListItm","onClickHendler","contact","typy","onClick","showFilteredContacts","normalizeFilter","toLowerCase","includes","onDeleteContact","length","contactsList","map","App","onFilterChange","onContactsFilter","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.90109fcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContactsForm_form__3khb9\",\"btnAdd\":\"AddContactsForm_btnAdd__yzml-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3zwGL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__37gqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsListItm_contact__jrlE5\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\npayload:  {\r\n      id: shortid.generate(),\r\n      name,\r\n      number\r\n    } \r\n})\r\n);\r\n\r\nconst deleteContact = createAction('contacts/delete')\r\n\r\nconst changeFilter = createAction('contacts/changeFilter')\r\n\r\nexport default { addContact, deleteContact, changeFilter };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phonebook-actions'\r\n\r\nconst contacts = createReducer([\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n], {\r\n    [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n    \r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload\r\n});\r\n\r\nexport default combineReducers({\r\n    contacts,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n    }),\r\n    logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n     phonebook: persistReducer(phonebookPersistConfig, phonebookReducer)\r\n    },\r\n    middleware,\r\n    devTools:process.env.NODE_ENV === 'development'\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nexport default function Container({children}) {\r\n    return (\r\n        <div className={styles.container}>{children}</div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n const Section = ({ title, children }) => (\r\n    <section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n  \r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired,\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport styles from './AddContactsForm.module.css'\r\n\r\nclass AddContactsForm extends Component {\r\n \r\n    state = {\r\n        name: '',\r\n        number:''\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.name, this.state.number);\r\n        this.setState({ name: '', number:'' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}\r\n                className={styles.form}\r\n            >\r\n              <label>\r\n                    Name\r\n                <input\r\n                        className={styles.input}\r\n                  value={ this.state.name}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                  required\r\n                />\r\n              </label>              \r\n              <label>\r\n                    Number\r\n                <input\r\n                  value={ this.state.number}\r\n                  onChange={this.handleChange}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                  required\r\n                />\r\n                </label>\r\n                <button\r\n                    type=\"submit\"\r\n                    className={styles.btnAdd}\r\n                >\r\n                Add contact\r\n                </button>\r\n           </form>  \r\n        )\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number)=> dispatch(phonebookActions.addContact(name, number))\r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContactsForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Filter({ value, onChange}) {\r\n    return (\r\n        <label>\r\n            Find contacts by name\r\n            <input type=\"text\" value={value} onChange={onChange}/>\r\n        </label>\r\n    )    \r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onFilterChange: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.phonebook.filter,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: (e) => dispatch(phonebookActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsListItm.module.css'\r\n\r\nexport default function ContactsListItm({name, number, onClickHendler}) {\r\n    return (\r\n        <li className={styles.contact}>\r\n            <span>{name}: </span>\r\n            <span>{number}</span>\r\n            <button\r\n                typy=\"button\"\r\n                onClick={onClickHendler}\r\n            >                       \r\n            Delete\r\n            </button>\r\n        </li> \r\n   ) \r\n}\r\n\r\nContactsListItm.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onClickHendler: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactsList.module.css';\r\n\r\nimport ContactsListItm from './ContactsListItm'\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact })=> {\r\n    return (\r\n        <>\r\n            {contacts.length ?\r\n                <ul className={styles.contactsList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactsListItm\r\n                    key={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onClickHendler={()=>onDeleteContact(id)}\r\n                />             \r\n            ))\r\n            }\r\n                </ul> :\r\n                <p>No contacts added</p>\r\n        }\r\n      </>  \r\n    )\r\n};\r\n\r\nconst showFilteredContacts = (contacts, filter) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({name}) => name.toLowerCase().includes(normalizeFilter))\r\n};\r\n\r\nconst mapStateToProps = ({phonebook:{contacts, filter}}) => ({\r\ncontacts: showFilteredContacts(contacts, filter)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\nonDeleteContact: id => dispatch(phonebookActions.deleteContact(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);","import React, { Component } from 'react';\r\n// import shortid from 'shortid';\r\n// import { connect } from 'react-redux';\r\n// import phonebookActions from './redux/phonebook/phonebook-actions';\r\n\r\nimport Container from './components/Container';\r\nimport Section from './components/Section';\r\nimport AddContactsForm from './components/AddContactsForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactsList';\r\n\r\nclass App extends Component {\r\n  // state = {\r\n  //   contacts: [\r\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  //   ],\r\n  //   filter: '',\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   const userContacts = JSON.parse(localStorage.getItem('contacts'));\r\n    \r\n  //   if (userContacts) {\r\n  //     this.setState({ contacts: userContacts });\r\n  //   }\r\n  //  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {    \r\n  //   if (prevState.contacts !== this.state.contacts) {\r\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n  //   }\r\n  // }\r\n\r\n  // AddContact = (name, number) => {\r\n  //   const contact = {\r\n  //     id: shortid.generate(),\r\n  //     name,\r\n  //     number\r\n  //   }\r\n    \r\n  //   this.state.contacts.some(i => i.name === name) ?\r\n  //     alert(`${name} is already in contacts`) :\r\n  //     this.setState(({ contacts }) => ({contacts: [contact, ...contacts]}))\r\n  // };\r\n\r\n  // DeleteContacts = (id) => {\r\n  //   this.setState(prevState => ({\r\n  //     contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n  //   }))\r\n  // };\r\n\r\n  onFilterChange = (e) => {\r\n    this.setState({filter: e.target.value})\r\n  };\r\n  \r\n  onContactsFilter = () => {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  };\r\n  \r\n\r\n  render() {    \r\n    return (\r\n      <Container >\r\n        <Section\r\n          title={'Phonebook'}\r\n          children={\r\n            <AddContactsForm />\r\n          }\r\n        />\r\n        <Section\r\n          title={'Contacts'}\r\n          children={\r\n            <>\r\n              <Filter />\r\n              \r\n              <ContactList />\r\n            </>\r\n          }\r\n        />\r\n      </Container>\r\n    );\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store'\n\nimport App from \"./App\";\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<h1>Loading STATE</h1>} persistor={store.persistor}>\n        <App />\n        </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}